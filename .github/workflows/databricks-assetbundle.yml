name: Databricks Asset Bundle CI/CD

on:
  push:
    branches:
      - develop
      - release
      - main
  pull_request:

jobs:
  lint:
    uses: ./.github/templates/lint.yml@main

  black:
    uses: ./.github/templates/black.yml@main

  unittest:
    uses: ./.github/templates/unittest.yml@main

  coverage:
    uses: ./.github/templates/code-coverage.yml@main

  gitleaks:
    uses: ./.github/templates/gitleaks.yml@main


  deploy:
    runs-on: ubuntu-latest
    needs: [lint, black, unittest, coverage, gitleaks]
    defaults:
      run:
        working-directory: dbx_bundle

    # Map GitHub branch -> GitHub Environment
    environment: ${{ github.ref == 'refs/heads/main' && 'dev' || github.ref == 'refs/heads/release' && 'qa' || 'dev' }}

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Databricks CLI (new)
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh

      - name: Check Databricks CLI
        run: databricks version

      - name: Deploy Asset Bundle
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            databricks bundle deploy -t dev
          elif [[ "${GITHUB_REF##*/}" == "release" ]]; then
            databricks bundle deploy -t qa
          elif [[ "${GITHUB_REF##*/}" == "main" ]]; then
            databricks bundle deploy -t prod
          fi
