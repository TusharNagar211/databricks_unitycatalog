name: Databricks CI/CD

on:
  push:
    branches:
      - develop
      - release
      - main
  pull_request:

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
  black:
    uses: ./.github/workflows/black.yml
  unittest:
    uses: ./.github/workflows/unittest.yml
  coverage:
    uses: ./.github/workflows/code-coverage.yml
  gitleaks:
    uses: ./.github/workflows/gitleaks.yml


  deploy:
    runs-on: ubuntu-latest
    needs: [lint, black, unittest, coverage, gitleaks]
    defaults:
      run:
        working-directory: dbx_bundle

    # Map branch -> GitHub environment (dev, qa, prod)
    environment: ${{ github.ref == 'refs/heads/main' && 'dev' || github.ref == 'refs/heads/release' && 'qa' || 'dev' }}

    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Databricks CLI
        run: pip install databricks-cli

      - name: Configure Databricks CLI
        run: |
          databricks configure --token <<EOF
          ${{ secrets.DATABRICKS_HOST }}
          ${{ secrets.DATABRICKS_TOKEN }}
          EOF

      - name: Deploy Notebooks to Environment
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            databricks workspace import_dir -o dbx_bundle "/Users/tushar@hemaliriaangmail.onmicrosoft.com/dev/dbx_bundle"
          elif [[ "${GITHUB_REF##*/}" == "release" ]]; then
            databricks workspace import_dir -o dbx_bundle /Repos/qa/dbx_bundle
          elif [[ "${GITHUB_REF##*/}" == "main" ]]; then
            databricks workspace import_dir -o dbx_bundle /Repos/prod/dbx_bundle
          fi
